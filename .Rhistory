mean(par.est.ov[ , 5]) # r=0.4
mean(par.est.ov[ , 6]) # r=0.5
mean(par.est.ov[ , 7]) # r=0.6
mean(par.est.ov[ , 8]) # r=0.7
mean(par.est.ov[ , 9]) # r=0.8
mean(par.est.ov[ , 10]) # r=0.9
mean(par.est.ov[ , 11]) # r=0.99
# Plot
plot(density(par.est.ov[ , 1]), xlim=c(0,1.5), ylim=c(0,12))
lines(density(par.est.ov[ , 3]), col="gray")
lines(density(par.est.ov[ , 6]), col="orange")
lines(density(par.est.ov[ , 11]), col="red")
abline(v=b1, col="black")
legend(0, 12, # Add legend
legend=c("r=0","r=0.2","r=0.5","r=0.99"),
col=c("black","gray","orange","red"),
pch=1)
# Adopted from p. 345
set.seed(843749) # Set the seed for reproducible results
# Create correlation matrix, (r=0)
rand.vcv <- matrix(0, nrow = 20, ncol = 20)
diag(rand.vcv) <- 1
# Create 20 uncorrelated variables
rand.data <- as.data.frame(rmvnorm(1000, mean = rep(0, times = 20),
sigma = rand.vcv))
# Rename columns
colnames(rand.data) <- c("y", "x1", "x2", "x3", "x4", "x5", "x6", "x7",
"x8", "x9", "x10", "x11", "x12", "x13", "x14", "x15", "x16", "x17",
"x18", "x19")
# Estimate model
rand.model <- lm(y~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 +
x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19, data = rand.data)
summary(rand.model)
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("stargazer", "vioplot", "arm"),  pkgTest)
setwd("/Users/isabellameier/Desktop/StatsI_Fall2023")
# Only include Ireland and relevant variables.
df <- read.csv("../../datasets/ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Only include Ireland and relevant variables.
df <- read.csv("../../datasets/ESS10.csv")
df <- read.csv("/Users/isabellameier/Desktop/StatsI_Fall2023/datasets/ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Reverse euftf, to measure euroscepticism more intuitively
df_s["euftf_re"] = 10 - df_s[ ,c("euftf")]
# Categorize education levels
df_s["edu_cat"] <- NA
df_s[(df_s$edlvdie==1) | (df_s$edlvdie==2) | (df_s$edlvdie==3) | (df_s$edlvdie==4), c("edu_cat")] <- 1 # Junior Cycle
df_s[(df_s$edlvdie==5) | (df_s$edlvdie==6) | (df_s$edlvdie==7) | (df_s$edlvdie==8) | (df_s$edlvdie==9), c("edu_cat")] <- 2 # Leaving Certificate
df_s[(df_s$edlvdie==10) | (df_s$edlvdie==11) | (df_s$edlvdie==12), c("edu_cat")] <- 3 # Advanced Certificate
df_s[(df_s$edlvdie==13) | (df_s$edlvdie==14) | (df_s$edlvdie==15), c("edu_cat")] <- 4 # Bachelor Degree
# Convert into factor variable
df_s$edu_cat <- factor(df_s$edu_cat,
levels = c(1,2,3,4,5),
labels = c("Junior Cycle",
"Leaving Certificate",
"Advanced Certificate",
"Bachelor Degree",
"Postgraduate Degree"))
levels(df_s$edu_cat)
typeof(df_s$edu_cat)
# Record missing values
df_s[(df_s == -67) | (df_s == -78) | (df_s == -89) | (df_s == 77) | (df_s == 88) | (df_s == 99) | (df_s == 5555) | (df_s == 7777) | (df_s == 8888) | (df_s == 9999)] <- NA
# Descriptive plots
vioplot(df_s$euftf_re ~ df_s$edu_cat)
plot(df_s$edlvdie,df_s$euftf_re)
plot(jitter(df_s$edlvdie,2),jitter(df_s$euftf_re,2))
# Simple model only considering socio-demographic variables
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df_s)
summary(model_base)
# Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df_s)
summary(model1)
# Categorical independent variable
model1 <- lm(euftf_re~edu_cat,data=df_s)
summary(model1)
# Change reference category
plot(df_s$edu_cat)
df_s$edu_cat <- relevel(df_s$edu_cat, ref = 2)
model1 <- lm(euftf_re~edu_cat,data=df_s)
summary(model1)
model2 <- lm(euftf_re~hinctnta,data=df_s)
summary(model2)
model3 <- lm(euftf_re~trstplt,data=df_s)
summary(model3)
model4 <- lm(euftf_re~imwbcnt,data=df_s)
summary(model4)
# Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df_s)
summary(model1)
# Add economic dimension
model_eco <- lm(euftf_re~edlvdie + hinctnta,data=df_s)
summary(model_eco)
# Add political dimension
model_pol <- lm(euftf_re~edlvdie + hinctnta + trstplt, data=df_s)
summary(model_pol)
# Add cultural dimension
model_cul <- lm(euftf_re~edlvdie+ hinctnta + trstplt + imwbcnt, data=df_s)
summary(model_cul)
# Add socio-economic variables
model_final <- lm(euftf_re~edlvdie+ hinctnta + trstplt + imwbcnt + gndr + agea + brncntr, data=df_s)
summary(model_final)
# Get Latex table
stargazer(model1,model_eco,model_pol,model_cul,model_final)
# How to visualize results?
coefplot(model_final)
coefplot(model1, add=TRUE, col.pts="gray")
coefplot(model1, add=TRUE, col.pts="gray")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
setwd("/Users/isabellameier/Desktop/StatsI_Fall2023")
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
head(inc.sub)
fit <- lm(y ~ x, inc.sub)
model <- lm(voteshare~difflog, data=inc.sub)
summary(model)
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
head(inc.sub)
model <- lm(voteshare~difflog, data=inc.sub)
summary(model)
plot(x=inc.sub$difflog, y=inc.sub$voteshare)
abline(model)
source("~/Downloads/04_tutorial_HF.R")
resi_1 <- residuals(model)
assign("resi_1", residuals)
head(resi_1)
print(resi_1)
residuals_1 <- resid(model)
head(residuals_1)
residuals_1 <- residuals(model)
head(residuals_1)
print(residuals_1)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
setwd("/Users/isabellameier/Desktop/StatsI_Fall2023")
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
model <- lm(voteshare~difflog, data=inc.sub)
summary(model)
plot(x=inc.sub$difflog, y=inc.sub$voteshare)
abline(model)
residuals_1 <- residuals(model)
print(residuals_1)
# Question 2
model_2 <- lm(presvote~difflog, data=inc.sub)
summary(model_2)
# 2
plot(x=inc.sub$difflog, y= inc.sub$presvote)
abline(model_2)
# 3
residuals_2 <- residuals(model_2)
print(residuals_2)
# Question 3
# 1
model_3 <- lm(voteshare~presvote, data=inc.sub)
summary(model_3)
# 2
plot(x=inc.sub$presvote, y=inc.sub$voteshare)
abline(model_3)
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("stargazer","vioplot","arm","broom","ggplot2","fastDummies"),  pkgTest)
setwd("/Users/isabellameier/Desktop/StatsI_Fall2023")
# Only include Ireland and relevant variables.
df <- read.csv("../../datasets/ESS10.csv")
# Only include Ireland and relevant variables.
df <- read.csv("../../datasets/ESS10.csv")
# Only include Ireland and relevant variables.
df <- read.csv("../../datasets/ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Only include Ireland and relevant variables.
df <- read.csv("../../datasets/ESS10.csv")
# Only include Ireland and relevant variables.
df <- read.csv("/Users/isabellameier/Desktop/StatsI_Fall2023")
# Only include Ireland and relevant variables.
df <- read.csv("/Users/isabellameier/Desktop/StatsI_Fall2023/ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Reverse euftf, to measure euroscepticism more intuitively
df_s["euftf_re"] = 10 - df_s[ ,c("euftf")]
# Categorize education levels
df_s["edu_cat"] <- NA
df_s[(df_s$edlvdie==1) | (df_s$edlvdie==2) | (df_s$edlvdie==3) | (df_s$edlvdie==4), c("edu_cat")] <- 1 # Junior Cycle
df_s[(df_s$edlvdie==5) | (df_s$edlvdie==6) | (df_s$edlvdie==7) | (df_s$edlvdie==8) | (df_s$edlvdie==9), c("edu_cat")] <- 2 # Leaving Certificate
df_s[(df_s$edlvdie==10) | (df_s$edlvdie==11) | (df_s$edlvdie==12), c("edu_cat")] <- 3 # Advanced Certificate
df_s[(df_s$edlvdie==13) | (df_s$edlvdie==14) | (df_s$edlvdie==15), c("edu_cat")] <- 4 # Bachelor Degree
df_s[(df_s$edlvdie==16) | (df_s$edlvdie==17) | (df_s$edlvdie==18), c("edu_cat")] <- 5 # Postgraduate Degree
# Convert into factor variable
df_s$edu_cat <- factor(df_s$edu_cat,
levels = c(1,2,3,4,5),
labels = c("Junior Cycle",
"Leaving Certificate",
"Advanced Certificate",
"Bachelor Degree",
"Postgraduate Degree"))
levels(df_s$edu_cat)
typeof(df_s$edu_cat)
# Record missing values
df_s[(df_s == -67) | (df_s == -78) | (df_s == -89) | (df_s == 77) | (df_s == 88) | (df_s == 99) | (df_s == 999) | (df_s == 5555) | (df_s == 7777) | (df_s == 8888) | (df_s == 9999)] <- NA
# Save dataset
write.csv(df_s, "../../datasets/ess_euroscepticism.csv")
# Initial investigation ----------
df <- read.csv("../../datasets/ess_euroscepticism.csv", row.names="X")
View(df)
# Save dataset
write.csv(df_s, "/Users/isabellameier/Desktop/StatsI_Fall2023/datasets/ess_euroscepticism.csv")
# Initial investigation ----------
df <- read.csv("../../datasets/ess_euroscepticism.csv", row.names="X")
# Save dataset
write.csv(df_s, "/Users/isabellameier/Desktop/StatsI_Fall2023/ess_euroscepticism.csv")
# Initial investigation ----------
df <- read.csv("/Users/isabellameier/Desktop/StatsI_Fall2023/ess_euroscepticism.csv", row.names="X")
View(df)
is.factor(df$edu_cat)
# Only include Ireland and relevant variables.
df <- read.csv("/Users/isabellameier/Desktop/StatsI_Fall2023/ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Reverse euftf, to measure euroscepticism more intuitively
df_s["euftf_re"] = 10 - df_s[ ,c("euftf")]
# Categorize education levels
df_s["edu_cat"] <- NA
df_s[(df_s$edlvdie==1) | (df_s$edlvdie==2) | (df_s$edlvdie==3) | (df_s$edlvdie==4), c("edu_cat")] <- 1 # Junior Cycle
df_s[(df_s$edlvdie==5) | (df_s$edlvdie==6) | (df_s$edlvdie==7) | (df_s$edlvdie==8) | (df_s$edlvdie==9), c("edu_cat")] <- 2 # Leaving Certificate
df_s[(df_s$edlvdie==10) | (df_s$edlvdie==11) | (df_s$edlvdie==12), c("edu_cat")] <- 3 # Advanced Certificate
df_s[(df_s$edlvdie==13) | (df_s$edlvdie==14) | (df_s$edlvdie==15), c("edu_cat")] <- 4 # Bachelor Degree
df_s[(df_s$edlvdie==16) | (df_s$edlvdie==17) | (df_s$edlvdie==18), c("edu_cat")] <- 5 # Postgraduate Degree
# Convert into factor variable
df_s$edu_cat <- factor(df_s$edu_cat,
levels = c(1,2,3,4,5),
labels = c("Junior Cycle",
"Leaving Certificate",
"Advanced Certificate",
"Bachelor Degree",
"Postgraduate Degree"))
levels(df_s$edu_cat)
typeof(df_s$edu_cat)
# Record missing values
df_s[(df_s == -67) | (df_s == -78) | (df_s == -89) | (df_s == 77) | (df_s == 88) | (df_s == 99) | (df_s == 999) | (df_s == 5555) | (df_s == 7777) | (df_s == 8888) | (df_s == 9999)] <- NA
# Save dataset
write.csv(df_s, "/Users/isabellameier/Desktop/StatsI_Fall2023/ess_euroscepticism.csv")
# Initial investigation ----------
df <- read.csv("/Users/isabellameier/Desktop/StatsI_Fall2023/ess_euroscepticism.csv", row.names="X")
View(df)
is.factor(df$edu_cat)
# Convert into factor variable
df$edu_cat <- factor(df$edu_cat)
is.factor(df$edu_cat)
# Descriptive plots
par(mar = c(5, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
# Simple model only considering socio-demographic variables
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df)
summary(model_base)
# Simple linear regression
model_base <- lm(euftf_re~brncntr, data=df)
summary(model_base)
# Plot
plot(df$agea, df$euftf_re)
abline(h=model_base$coefficients[1],col="black") # Regression line brncntr=0, Born in country
abline(h=model_base$coefficients[1]+model_base$coefficients[2],col="blue") # Regression line brncntr=1, Not born in country
legend(70, 10, # Legend
legend=c("Born in country", "Not born in country"),
col=c("black","blue"),
pch=1)
# Multiple linear regression
model_base <- lm(euftf_re~brncntr + gndr + agea, data=df)
summary(model_base)
# Plot
plot(df$agea, df$euftf_re)
abline(model_base$coefficients[1], model_base$coefficients[4],col="black") # Regression line brncntr=0, Born in country
abline(model_base$coefficients[1]+model_base$coefficients[2], model_base$coefficients[4],col="blue") # Regression line brncntr=1, Not born in country
legend(70, 10, # Legend
legend=c("Born in country", "Not born in country"),
col=c("black","blue"),
pch=1)
# Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df)
summary(model1)
# Create dummy variables
df$JuniorCycle <- ifelse(df$edu_cat == "Junior Cycle", 1, 0)
df$LeavingCertificate <- ifelse(df$edu_cat == "Leaving Certificate", 1, 0)
df$AdvancedCertificate <- ifelse(df$edu_cat == "Advanced Certificate", 1, 0)
df$Bachelor <- ifelse(df$edu_cat == "Bachelor Degree", 1, 0)
df$Postgraduate <- ifelse(df$edu_cat == "Postgraduate Degree", 1, 0)
# Faster way to create dummy set
df <- dummy_cols(df, select_columns = "edu_cat")
# Fit model
model1 <- lm(euftf_re~LeavingCertificate+AdvancedCertificate+Bachelor+Postgraduate,data=df)
summary(model1)
# Change reference category to leaving certificate
model1 <- lm(euftf_re~JuniorCycle+AdvancedCertificate+Bachelor+Postgraduate,data=df)
summary(model1)
# Categorical independent variable, using factor variales
is.factor(df$edu_cat)
model1 <- lm(euftf_re~edu_cat,data=df)
summary(model1)
# Change reference category
# Which one should we select?
plot(df$edu_cat)
levels(df$edu_cat) # First level, "Advanced Certificate"
# Change reference category to leaving certificate
df$edu_cat <- relevel(df$edu_cat, ref = 4)
levels(df$edu_cat) # First level, "Leaving Certificate"
# Refit model
model1 <- lm(euftf_re~edu_cat,data=df)
summary(model1)
model2 <- lm(euftf_re~hinctnta,data=df)
summary(model2)
model3 <- lm(euftf_re~trstplt,data=df)
summary(model3)
model4 <- lm(euftf_re~imwbcnt,data=df)
summary(model4)
# Education--Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df)
summary(model1)
nobs(model1) # Number of observations in model
# Add economic dimension
model_eco <- lm(euftf_re~edlvdie + hinctnta,data=df)
summary(model_eco)
nobs(model_eco) # Number of observations in model
# The easiest solution is to remove rows with missing values
df_na <- df[complete.cases(df), ]
# Let's start again, using only complete cases (df_na)
# Education--Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df_na)
summary(model1)
# Add economic dimension
model_eco <- lm(euftf_re~edlvdie + hinctnta,data=df_na)
summary(model_eco)
# Add political dimension
model_pol <- lm(euftf_re~edlvdie + hinctnta + trstplt, data=df_na)
summary(model_pol)
# Add cultural dimension
model_cul <- lm(euftf_re~edlvdie + hinctnta + trstplt + imwbcnt, data=df_na)
summary(model_cul)
# Which interpretations can we make?
# the education effect is mediated by the attitudes towards imigration
# Add socio-economic variables
model_final <- lm(euftf_re~edlvdie + hinctnta + trstplt + imwbcnt + gndr + agea + brncntr, data=df_na)
summary(model_final)
# Get Latex table
stargazer(model1,model_eco,model_pol,model_cul,model_final)
# How to visualize results?
coefplot(model_final) # 95% Confidence intervals (and 50% CIs)
coefplot(model1, add=TRUE, col.pts="gray")
# Does adding economic dimension improve fit?
anova(model1, model_eco, test='F')
summary(model_eco)
# Does adding political dimension improve fit?
anova(model1, model_pol, test='F')
summary(model_pol)
# What about political dimension alone?
model3 <- lm(euftf_re~edlvdie+trstplt,data=df_na) # Refit with df_na
anova(model1, model3, test='F')
# Does adding cultural dimension improve fit?
anova(model1, model_cul, test='F')
summary(model_cul)
model_3 <- lm(voteshare~presvote, data=inc.sub)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
setwd("/Users/isabellameier/Desktop/StatsI_Fall2023")
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
head(inc.sub)
# Question 1
# 1
model <- lm(voteshare~difflog, data=inc.sub)
summary(model)
# 2
plot(x=inc.sub$difflog, y=inc.sub$voteshare)
abline(model)
# 3
residuals_1 <- residuals(model)
print(residuals_1)
# Question 2
# 1
model_2 <- lm(presvote~difflog, data=inc.sub)
summary(model_2)
# 2
plot(x=inc.sub$difflog, y= inc.sub$presvote)
abline(model_2)
# 3
residuals_2 <- residuals(model_2)
print(residuals_2)
# Question 3
# 1
model_3 <- lm(voteshare~presvote, data=inc.sub)
summary(model_3)
# Question 4
# 1
model_4 <- lm(x=residuals_2~residuals_1, data=inc.sub)
# Question 4
# 1
model_4 <- lm(residuals_2~residuals_1)
summary(model_4)
# 2
plot(x=residuals_1, y=residuals_2)
abline(model_4)
#
res_coefficients <- coef(model_4)
pred_eq_res <- paste("residuals_2 =", round(res_coefficients[1], 2), "+",
round(res_coefficients[2], 2), "* residuals_1")
print(pred_eq_res)
# Question 5
# 1
model_5 <- lm(voteshare~difflog+presvote,data=inc.sub)
summary(model_5)
# Question 4
# 1
model_4 <- lm(residuals_1~residuals_2)
summary(model_4)
# 2
plot(x=residuals_2, y=residuals_1)
abline(model_4)
# 2
plot(x=inc.sub$difflog, y=inc.sub$voteshare, xlab = "difflog", ylab = "voteshare")
abline(model)
# Question 4
# 1
model_4 <- lm(residuals_1~residuals_2)
summary(model_4)
# 2
plot(x=residuals_2, y=residuals_1)
# 2
plot(x=residuals_2, y=residuals_1)
abline(model_4)
